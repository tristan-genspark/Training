
    What I leanred for 
    RDS - Relational Database Service
    and Subnet Access Configuration



Amazon has a service called RDS and this is a relational database service
It abstracts database creation in to a quick and easy service.
Some benefits of using it
 -> It Makes Database Creation Easy
 -> Its fully managed by AWS
 -> Backups can be pushed to a bucket
 -> It supports snapshots
 




    LAB - Private and Public Subnet Access

The goal is to create a a VPC with two subnets within it
One is a private subnet containing a database and the other
is a public containing a webserver that can be accessed from the internet.
The other requirement is that the webserver can access the databse to proove
it works.

Instructions by Trainer
 - Create Custom VPC
 - Create Two Subnets (public private)
 - Create Two route tables (Public Private)
 - Create IGW (internet gateway) and attach to public subnet 
 - Create ec2 on public subnet 
 - Create RDS (Database) on private subnet 
 - Add security group on ec2 Publiuc Subnet as a nested security group in rds instance


Here are my notes on how I did it


Create VPC with this IP Address range  10.0.0.0/16

Create a subnet for public with this IP Address range - 10.0.1.0/24 
Create a subnet for public with this IP Address range - 10.0.2.0/24

While I am lacking in knowledge of subnet IP range specifications 
I learned that the smaller the number at the end the larger the number of ip's
The two subnets they have to be smaller ranges than the main vpc 

Make route tables now
set the publiuc route table to VPC
set the private route table to VPC

Create Internet Gateway by going to the VPC
then going to Internet Gateways and then go to Actions and select Attach to VPC

Go back to public route table 
Then edit it to support 0.0.0.0/0 for internet gateway
Then for the target choose internet gateway and select the newly create gateway
This will create an internet gateway for the public subnet where the webserver will be accessable

Attach Subnets to Routtables
Subnet > Actions > Edit Route Table Association

Go to the route tables and find the public route table
Actions > Set main route table

Then the important part to connect the subnets together is to to set the 
correct policy.

You go to the created RDS database and 
Locate its subnet group ID and copy it

Go to security groups in a new tab

Search using the group ID to find the security group ID

Then go to the eC2 Default security group and edit the inbound rules 
select all traffic and then paste the security group ID to create a 
nested security group



Then once that is done it should be possible to access the database
from the webserver.

Since I dont have expereince with connecting to SQL databases from a web application
or http server made a small python http server to accept connections
and then it connects to the database using a simple socket connection and
gets the response from port 3309 and prints it within the html file it sends back
The file is also on my github named "microhttp.py"

Once i did this it worked and shows the web server on the public subnet has 
access to the private subnet






